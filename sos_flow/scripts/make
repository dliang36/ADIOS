#!/bin/bash -e
if [ "x${SOS_ROOT}" == "x" ] ; then
  echo "Please set the SOS_ROOT environment variable."
  kill -INT $$
fi
if [ "x${SOS_WORK}" == "x" ] ; then
  echo "Please set the SOS_WORK environment variable."
  kill -INT $$
fi
if [ "x${SOS_CMD_PORT}" == "x" ] ; then
  echo "Please set the SOS_CMD_PORT environment variable."
  kill -INT $$
fi
if [ "x${SOS_BUILD_DIR}" == "x" ] ; then
  echo "Please run the setenv.sh script for your environment!"
  kill -INT $$
fi
export SOS_BUILT_FROM=$(pwd)
if [ "$1" == "clean" ]
then
   echo "Removing temp~ file cruft."
   rm -f *~
   rm -f $SOS_ROOT/src/*~
   rm -f $SOS_ROOT/src/sosa_mods/*~
   echo "Removing all binary objects."
   rm -rf $SOS_BUILD_DIR
   echo "Wiped the $SOS_BUILD_DIR/build folder.  Type './make' to rebuild."
else
    mkdir -p $SOS_BUILD_DIR
    cd $SOS_BUILD_DIR
      others=""
      if [ "x${NERSC_HOST}" != "x" ] ; then
        others="-DMPI_C_INCLUDE_PATH=${CRAY_MPICH2_DIR}/include -DMPI_C_LIBRARIES=${CRAY_MPICH2_DIR}/lib/libmpichf90_gnu_51_mt.so"
      fi
    if [ ! -f CMakeCache.txt ] ; then
      cmake \
         -G "Unix Makefiles" \
         -DCMAKE_BUILD_TYPE=RelWithDebInfo \
         --prefix=$SOS_BUILD_DIR/bin \
         -DCMAKE_C_COMPILER=gcc \
         -DCMAKE_CXX_COMPILER=g++ \
         -DUSE_TAU=TRUE \
         -DTAU_ROOT=$HOME/src/tau2 \
         -DTAU_ARCH=x86_64 \
         -DTAU_OPTIONS=-mpi-pthread \
         $others \
         ..
    fi
    #make -j
    make VERBOSE=0
    #cd ..
    #cd src
    #echo ""
    #echo "Running test suite..."
    #echo "    --> For detailed memory tests: ${SOS_ROOT}/tests/grindit"
    #echo ""
    #../bin/test
    #echo ""
    cd $SOS_BUILT_FROM
fi;
