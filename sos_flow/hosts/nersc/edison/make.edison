#!/bin/bash -e
if [ "x${SOS_ROOT}" == "x" ] ; then
  echo "Please set the SOS_ROOT environment variable."
  kill -INT $$
fi
if [ "x${SOS_WORK}" == "x" ] ; then
  echo "Please set the SOS_WORK environment variable."
  kill -INT $$
fi
if [ "x${SOS_CMD_PORT}" == "x" ] ; then
  echo "Please set the SOS_CMD_PORT environment variable."
  kill -INT $$
fi
if [ "$1" == "clean" ]
then
   rm -rf *~
   echo "Removing all binary objects."
   cd ..
   rm -rf ./bin
   mkdir bin
   rm -rf ./lib
   mkdir lib
   cd bin
   touch .keep
   cd ..
   cd lib
   touch .keep
   cd ..
   cd src
   echo "Wiped the ../bin folder, ../lib folder, and all binary contents.  Type './make' to rebuild."
else
    cd ..
    cd bin
    if [ ! -f CMakeCache.txt ] ; then
export MPI_C_INCLUDE_PATH=$CRAY_MPICH2_DIR/include
export MPI_C_LIBRARIES="-L$CRAY_MPICH2_DIR/lib -lmpi"

    cmake \
        -G "Unix Makefiles" \
        -DCMAKE_BUILD_TYPE=Debug \
        -DCMAKE_C_FLAGS=-O0 -m64\
        -DCMAKE_EXE_LINKER_FLAGS=-dynamic \
        --prefix=$SOS_ROOT/bin \
        -DCMAKE_C_COMPILER=cc \
        -DCMAKE_CXX_COMPILER=CC \
        -DUSE_TAU=TRUE \
        -DTAU_ROOT=$HOME/src/tau2 \
        -DTAU_ARCH=x86_64 \
        -DTAU_OPTIONS=-mpi-pthread \
        -DSOSD_CLOUD_SYNC=TRUE \
        -DSOSD_CLOUD_SYNC_WITH_MPI=TRUE \
        -DMPI_C_INCLUDE_PATH=$MPI_C_INCLUDE_PATH \
        -DMPI_CXX_INCLUDE_PATH=$MPI_C_INCLUDE_PATH \
        -DMPI_C_LIBRARIES=$MPI_C_LIBRARIES \
        -DMPI_CXX_LIBRARIES=$MPI_C_LIBRARIES \
        -DMPI_C_COMPILER=cc \
        -DMPI_CXX_COMPILER=CC \
        -DBUILD_SHARED_LIBS=TRUE \
         ..
    fi
    #make -j
    make VERBOSE=1
    cd ..
    cd src
    echo ""
    echo "Running test suite..."
    echo "    --> For detailed memory tests: ${SOS_ROOT}/tests/grindit"
    echo ""
    #valgrind --max-stackframe=4728552 ../bin/test
    ../bin/test
    echo ""
fi;
